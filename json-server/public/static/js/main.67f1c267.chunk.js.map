{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionTypes.js","redux/ActionCreators.js","components/DishdetailComponent.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","redux/feedback.js","App.js","redux/configuerStore.js","reportWebVitals.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","Card","to","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","href","height","Collapse","isOpen","navbar","Nav","NavItem","Button","outline","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","innerRef","input","check","color","Component","Footer","RenderCard","item","in","transformProps","exitTransform","CardBody","designation","CardSubtitle","CardText","description","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","required","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","role","model","Row","md","Col","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","React","RenderLeader","Media","tag","left","object","body","heading","About","leaders","CardHeader","title","list","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","ADD_LEADERS","LEADERS_LOADING","LEADERS_FAILED","ADD_FEEDBACK","postComment","dishId","rating","author","comment","dispatch","newComment","date","Date","toISOString","fetch","method","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesFailed","errmess","addDishes","commentsFailed","addComments","comments","promosFailed","addPromos","promos","addLeaders","leadersFailed","CommentForm","handleComment","RanderDish","top","RenderComments","commentsArray","Intl","DateTimeFormat","year","month","day","format","parse","DishDetail","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","location","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","key","withRouter","connect","actions","reset","Leaders","lastename","Dishes","action","Comments","concat","Promotions","InitialFeedback","Feedback","feedbacks","feedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f1c267.chunk.js","sourcesContent":[" const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw textprimary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loading\r\n\r\n\r\n","export const baseUrl = 'http://localhost:3001/'","import React from 'react'\r\nimport { Card ,CardImg ,  CardImgOverlay , CardTitle , Breadcrumb ,BreadcrumbItem } from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Loading from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nconst RenderMenuItem = ({ dish }) =>{\r\n  return (\r\n    <Card>\r\n      <Link to={ `/menu/${dish.id}` } >\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  )\r\n}\r\n\r\n        \r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n    return (\r\n      <div key={dish.id} className=\"col-12 col-md-5 mt-1\">\r\n        <RenderMenuItem dish={dish}/>\r\n      </div>\r\n    );\r\n  });\r\n  if(props.dishes.isLoading){\r\n    return (\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <Loading />\r\n          </div>\r\n      </div>\r\n    )\r\n  }else if(props.dishes.errMess){\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h4>{props.dishes.errMess}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n  }else \r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb >\r\n            <BreadcrumbItem>\r\n              <Link to='/home'>Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>\r\n              Menu\r\n            </BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            {menu}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Menu;","import React , {Component} from 'react'\r\nimport { Navbar, NavbarBrand , Nav, NavbarToggler,\r\n     Collapse , NavItem , Jumbotron , Modal,Button, ModalHeader,ModalBody, Form, FormGroup, Label, Input} from  'reactstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Header extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen : false,\r\n            isModalOpen : false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this)\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n    }\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        })\r\n    }\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"user \" + this.username.value + \" password \" + this.password.value\r\n        + \" Remember \" + this.remember.checked\r\n        )\r\n        event.preventDefault()\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\" >\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\" >\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante logo\" />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem >\r\n                                    <NavLink className=\"nav-link\" to=\"/home\"> <span className=\"fa fa-home fa-lg\"></span> Home </NavLink>\r\n                                </NavItem>\r\n                                <NavItem >\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About us \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem >\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa-lg\"></span> Menu \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem >\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa-lg\"></span> Contact us \r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline  onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span>Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Restorante Con Fusion</h1>\r\n                                <p>We take inspration from the \r\n                                    World's best cuisines , and create a unique\r\n                                    fusion experience . Our lipsmacking creactions\r\n                                    will tickle your culinary senses !.\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">User Name</Label>\r\n                                <Input type=\"text\" id=\"username\" name = \"username\" \r\n                                innerRef={(input)=>this.username = input} />\r\n                         \r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">PasseWord</Label>\r\n                                <Input type=\"password\" id=\"password\" name = \"password\"\r\n                                innerRef={(input)=>this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input)=>this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" className=\"bg-primary\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;","import { Link } from 'react-router-dom'\r\nconst Footer = (props) => {\r\n    return (\r\n        <>\r\n           <div className=\"footer\">\r\n                <div className=\"container\">\r\n                    <div className=\"row justify-content-center\">             \r\n                        <div className=\"col-4 offset-1 col-sm-2\">\r\n                            <h5>Links</h5>\r\n                            <ul className=\"list-unstyled\">\r\n                                <li><Link to=\"/home\">Home</Link></li>\r\n                                <li><Link to=\"/aboutus\">About</Link></li>\r\n                                <li><Link to=\"/menu\">Menu</Link></li>\r\n                                <li><Link to=\"/contactus\">Contact us</Link></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"col-7 col-sm-5\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                                confusion@food.net</a>\r\n                            </address>\r\n                        </div>\r\n                        <div className=\"col-12 col-sm-4 align-self-center\">\r\n                            <div className=\"text-center\">\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                                <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                                <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">             \r\n                        <div className=\"col-auto\">\r\n                            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Card , CardImg, CardText,CardBody, CardTitle, CardSubtitle} from 'reactstrap'\r\nimport Loading from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform } from 'react-animation-components'\r\n\r\nfunction RenderCard({item, isLoading, errMess}) {\r\n    \r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n    else \r\n        return(\r\n            <FadeTransform in transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }} \r\n            >\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle>{item.name}</CardTitle>\r\n                    {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n\r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish}\r\n                 isLoading={props.dishesLoading} \r\n                errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion} \r\n                    isLoading={props.promosLoading} \r\n                    errMess={props.promosErrMess} \r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader} \r\n                        isLoading={props.leadersLoading} \r\n                        errMess={props.leadersErrMess} \r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","/* eslint-disable react/jsx-pascal-case */\r\n/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React from 'react'\r\nimport {Breadcrumb , BreadcrumbItem , Button , Label , Col, Row} from 'reactstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport  { Control , Form , Errors} from 'react-redux-form'\r\n\r\nconst required = (value) => value && value.length;\r\nconst maxLength = (len) => (value) => !(value) || (value.length <= len);\r\nconst minLength = (len) => (value) => (value) && (value.length >= len);\r\nconst isNumber = (value) => !isNaN(Number(value));\r\nconst validEmail =  (value) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)\r\n\r\nclass Contact extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n    }\r\n  \r\n    handleSubmit(values){\r\n        alert(\"current state is : \" + JSON.stringify(values))\r\n       this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree , values.contactType,values.message)\r\n        this.props.resetFeedbackForm()\r\n    }\r\n    render(){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb >\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem>\r\n                            Contact us\r\n                        </BreadcrumbItem>\r\n      \r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\" >\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name : </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" className=\"form-control\" id=\"firstname\" name=\"firstname\" \r\n                                    placeholder=\" First Name\"\r\n                                    validators={\r\n                                        {\r\n                                            required,\r\n                                            minLength: minLength(4), \r\n                                            maxLength : maxLength(10)\r\n        \r\n                                        }\r\n                                    }\r\n                                     />\r\n                                    <Errors  className=\"text-danger\" \r\n                                    model=\".firstname\"\r\n                                    show=\"touched\"\r\n                                    messages={\r\n                                        {\r\n                                            required: ' required ',\r\n                                            minLength: ' minimum 4 characters ',\r\n                                            maxLength: ' maximum 10  characters '\r\n                                        }\r\n                                    }\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name : </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\" \r\n                                    placeholder=\" Last Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={\r\n                                        {\r\n                                            required,\r\n                                            minLength: minLength(4), \r\n                                            maxLength : maxLength(10)\r\n        \r\n                                        }\r\n                                    }\r\n                                     />\r\n                                   <Errors  className=\"text-danger\" \r\n                                    model=\".lastname\"\r\n                                    show=\"touched\"\r\n                                    messages={\r\n                                        {\r\n                                            required: ' required ',\r\n                                            minLength: ' minimum 4 characters ',\r\n                                            maxLength: ' maximum 10  characters '\r\n                                        }\r\n                                    } \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact tel. : </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" className=\"form-control\" id=\"telnum\" name=\"telnum\" \r\n                                    placeholder=\" tel num\"\r\n                                    validators={\r\n                                        {\r\n                                            required,\r\n                                            minLength: minLength(10), \r\n                                            maxLength : maxLength(10),\r\n                                            isNumber ,\r\n                                        }\r\n                                    }\r\n                                   />\r\n                                    <Errors  className=\"text-danger\" \r\n                                    model=\".telnum\"\r\n                                    show=\"touched\"\r\n                                    messages={\r\n                                        {\r\n                                            required: ' required ',\r\n                                            minLength: ' minimum 10 numbers ',\r\n                                            maxLength: ' maximum 10  numbers ',\r\n                                            isNumber  : ' only numbers are required '\r\n                                        }\r\n                                    } \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email : </Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" className=\"form-control\" id=\"email\" name=\"email\" \r\n                                    placeholder=\" Email \"\r\n                                    validators={\r\n                                        {\r\n                                            required,\r\n                                            validEmail ,\r\n                                        }\r\n                                    }\r\n                                   />\r\n                                    <Errors  className=\"text-danger\" \r\n                                    model=\".email\"\r\n                                    show=\"touched\"\r\n                                    messages={\r\n                                        {\r\n                                            required: ' required ',\r\n                                            \r\n                                            validEmail  : ' Invalid email Address '\r\n                                        }\r\n                                    } \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size : 6, offset : 2}}>\r\n                                    <div  className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\" \r\n                                            className=\"form-check-input\"\r\n                                            /> { ' '} \r\n                                            <strong>May we contact you ?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size : 3, offset : 1}}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                        <option >Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback : </Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\" \r\n                                    rows=\"12\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10,offset:2}}>\r\n                                    <Button type=\"submit\" color =\"primary\">\r\n                                        send feedback\r\n                                    </Button> \r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Contact\r\n","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\nconst RenderLeader = ({leader})=>{\r\n    \r\n    return (\r\n        <>\r\n            <Fade in>\r\n                <Media key={leader.id} tag=\"li\">\r\n                    <Media left className=\"mr-3\">\r\n                        <Media object src={ baseUrl + leader.image} alt={leader.name} />\r\n                    </Media>\r\n                    <Media body>\r\n                        <Media heading>\r\n                            {leader.name}\r\n                            \r\n                        </Media>\r\n                        <p>{leader.designation}</p>\r\n                        <p>{leader.description}</p>\r\n                    </Media>\r\n                </Media>\r\n            </Fade>\r\n        </>\r\n    )\r\n}\r\nfunction About(props) {\r\n\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <Stagger in>\r\n                <RenderLeader leader = {leader} />\r\n            </Stagger>\r\n\r\n        );\r\n    });\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Media list>\r\n                        {leaders} \r\n                    </Media>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n\r\nexport const ADD_FEEDBACK ='ADD_FEEDBACK'","import * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\n\r\n/* export const addComment = (dishId, rating, author, comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n}); */\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message);\r\n        alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\n\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\n\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading(true));\r\n  return fetch(baseUrl + 'leaders')\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          var errmess = new Error(error.message);\r\n          throw errmess;\r\n    })\r\n  .then(response => response.json())\r\n  .then(Leaders => dispatch(addLeaders(Leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders\r\n});\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\n\r\n\r\n\r\nexport const postFeedback = (firstname, lastename, telnum, email, agree , contactType,message) => (dispatch) => {\r\n\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastename: lastename,\r\n    telnum: telnum,\r\n      email: email,\r\n      agree : agree,\r\n      contactType : contactType,\r\n      message  : message\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n  return fetch(baseUrl + 'feedback', {\r\n      method: \"POST\",\r\n      body: JSON.stringify(newFeedback),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      credentials: \"same-origin\"\r\n  })\r\n  .then(response => {\r\n      if (response.ok) {\r\n        return response;\r\n      } else {\r\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n        error.response = response;\r\n        throw error;\r\n      }\r\n    },\r\n    error => {\r\n          throw error;\r\n    })\r\n  .then(response => response.json())\r\n  .then(response => alert(\"Thank you for your feedback!\" + JSON.stringify(response)))\r\n  .catch(error =>  { console.log('post feedback', error.message);\r\n      alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback\r\n});\r\n\r\n","/* eslint-disable react/jsx-pascal-case */\r\nimport React  from 'react'\r\nimport {Card ,CardImg,CardBody, CardTitle,CardText ,Breadcrumb , BreadcrumbItem, Button, Modal, ModalHeader, ModalBody, Label, Row, Col } from 'reactstrap'\r\nimport '../App.css';\r\nimport { Link }  from 'react-router-dom'\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport Loading from './LoadingComponent'\r\nimport { baseUrl } from '../shared/baseUrl'\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst maxLength = (len) => (value) => !(value) || (value.length <= len);\r\nconst minLength = (len) => (value) => (value) && (value.length >= len);\r\nclass CommentForm extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isModalOpen : false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this)\r\n        this.handleComment = this.handleComment.bind(this)\r\n    }\r\n\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n    handleComment(values){\r\n        this.toggleModal()\r\n        this.props.postComment(this.props.dishId,values.rating, values.author,values.comment)\r\n    }\r\n    render(){\r\n        return (\r\n            <>\r\n                <Button className=\"btn bg-white text-dark\" onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-pencil fa-lg\"></span>\r\n                    &nbsp; submit Comment</Button>\r\n\r\n\r\n                    <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm  onSubmit={(values) => this.handleComment(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"rating\" md={3}>Rating : </Label>\r\n                            <Col md={9} >\r\n                                <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                    className=\"form-control\">\r\n                                    <option >1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={3}>Your Name : </Label>\r\n                                <Col md={9}>\r\n                                    <Control.text model=\".author\" id=\"name\" name=\"name\" \r\n                                    placeholder=\" Your Name\" \r\n                                    className=\"form-control\"\r\n                                    validators={\r\n                                        {\r\n                                            minLength: minLength(2), \r\n                                            maxLength : maxLength(15)\r\n        \r\n                                        }\r\n                                    }\r\n                                     />\r\n                                   <Errors  className=\"text-danger\" \r\n                                    model=\".name\"\r\n                                    show=\"touched\"\r\n                                    messages={\r\n                                        {\r\n                                            minLength: ' minimum 4 characters ',\r\n                                            maxLength: ' maximum 10  characters '\r\n                                        }\r\n                                    } \r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={3}>Your Comment : </Label>\r\n                                <Col md={9}>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\" \r\n                                    rows=\"12\" className=\"form-control\"/>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10,offset:2}}>\r\n                                    <Button type=\"submit\" color =\"primary\">\r\n                                        Submit\r\n                                    </Button> \r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\n    const RanderDish = ({dish}) =>{\r\n        if(dish != null){\r\n            return (\r\n                <FadeTransform\r\n                in transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                    }}\r\n                >\r\n                    <Card>\r\n                        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                        <CardBody>\r\n                            <CardTitle>{dish.name}</CardTitle>\r\n                            <CardText>{dish.description}</CardText>\r\n                        </CardBody>\r\n                    </Card>\r\n                </FadeTransform>\r\n            );\r\n        }else{\r\n            return (\r\n                <>\r\n                </>\r\n            );\r\n        }\r\n    }\r\n    const RenderComments = ({commentsArray,postComment,dishId}) =>{\r\n        if(commentsArray != null){\r\n            const comments = commentsArray.map((comment) => {\r\n               \r\n                return (\r\n                    <Fade in>\r\n                        <li key={comment.id}>\r\n                            <p>{comment.comment}</p>\r\n                            <p> -- {comment.author} , {new Intl.DateTimeFormat('en-US', {year: 'numeric',month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))} </p>\r\n                        </li>\r\n                    </Fade>\r\n                );\r\n            });\r\n            return(\r\n                <>\r\n                    <ul className=\"list-unstyled\">\r\n                        <Stagger in>\r\n                            {comments}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </>\r\n            )\r\n        }else{\r\n            return (\r\n                <>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n    export const DishDetail = (props) =>{\r\n        if(props.isLoading){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else if(props.errMess){\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h4>{props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }else if(props.dish != null){\r\n            return (\r\n             \r\n                <>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <Breadcrumb >\r\n                                <BreadcrumbItem>\r\n                                    <Link to='/home'>Home</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem>\r\n                                    <Link to='/menu'>Menu</Link>\r\n                                </BreadcrumbItem>\r\n                                <BreadcrumbItem active>\r\n                                    {props.dish.name}\r\n                                </BreadcrumbItem>\r\n                            </Breadcrumb>\r\n                            <div className=\"col-12\">\r\n                                <h3>{props.dish.name}</h3>\r\n                                <hr />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-md-5 col-sm-12 m-1\">\r\n                                <RanderDish dish ={props.dish}  />\r\n                            </div>\r\n                            <div className=\"col-12 col-md-5 col-sm-12 m-1\">\r\n                                <h4>Comments</h4>\r\n                                <RenderComments commentsArray= { props.comments } \r\n                                    postComment = {props.postComment}\r\n                                    dishId={props.dish.id}\r\n                                />\r\n                        \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            );\r\n        }else {\r\n            return (\r\n                <>\r\n                </>\r\n            )\r\n        }\r\n        \r\n    }\r\n","import Menu from './MenuComponent'\r\nimport React,  { Component } from 'react'\r\nimport Header from './HeaderComponent'\r\nimport Footer from './FooterComponent'\r\nimport Home from './HomeComponent'\r\nimport '../App.css'\r\nimport Contact from './ContactComponent'\r\nimport {Switch,Route,Redirect , withRouter} from 'react-router-dom'\r\nimport About from './AboutComponent'\r\nimport { connect } from 'react-redux'\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeaders } from '../redux/ActionCreators'\r\nimport { DishDetail } from './DishdetailComponent'\r\nimport {actions } from 'react-redux-form'\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return {\r\n      dishes : state.dishes,\r\n      comments : state.comments,\r\n      promotions : state.promotions,\r\n      leaders: state.leaders,\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchDishes : () => {dispatch(fetchDishes())},\r\n  resetFeedbackForm : () => { dispatch(actions.reset('feedback')) },\r\n  fetchComments : () => {dispatch(fetchComments())},\r\n  fetchPromos : () => {dispatch(fetchPromos())},\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  fetchLeaders : () => {dispatch(fetchLeaders())},\r\n  postFeedback : (firstname, lastename, telnum, email, agree , contactType,message) => dispatch(postComment(firstname, lastename, telnum, email, agree , contactType,message)),\r\n});\r\nclass  Main extends Component {\r\n \r\n\r\n  componentDidMount(){\r\n    this.props.fetchDishes()\r\n    this.props.fetchComments()\r\n    this.props.fetchPromos()\r\n    this.props.fetchLeaders()\r\n    \r\n  }\r\n  /*onDishSelect(dishId){\r\n    this.setState({selectedDish: dishId})\r\n  }*/\r\n  render(){\r\n    const HomePage = () => {\r\n      return(\r\n          <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promosLoading={this.props.promotions.isLoading}\r\n              promosErrMess={this.props.promotions.errMess}\r\n\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leadersLoading={this.props.leaders.isLoading} \r\n              leadersErrMess={this.props.leaders.errMess} \r\n          />\r\n      );\r\n    }\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errMess}\r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment}\r\n          />\r\n      );\r\n    };\r\n    return (\r\n      <div>\r\n          <Header />\r\n           <TransitionGroup>\r\n            <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n              <Switch location={this.props.location}>\r\n                  <Route path='/home' component={HomePage} />\r\n                  <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders.leaders} />} />\r\n                  <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                  <Route path='/menu/:dishId' component={DishWithId} />\r\n                  <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback = {  this.props.postFeedback }/>} />\r\n                  <Redirect to=\"/home\" />\r\n              </Switch>\r\n            </CSSTransition>\r\n          </TransitionGroup>\r\n          <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter((connect(mapStateToProps,mapDispatchToProps)(Main)));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n    errMess: null,\r\n    comments : []\r\n}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return {...state, isLoading: false, errMess: null, comments: action.payload};\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload,comments : []};\r\n    \r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {...state,comments : state.comments.concat(comment)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n    isLoading : true,\r\n    errMess: null,\r\n    promotions: []\r\n},action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default :\r\n            return state\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\n\r\nexport const Leaders = (state =  {\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n},action) =>{\r\n    switch(action.type){\r\n        case ActionTypes.ADD_LEADERS:\r\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n        default :\r\n            return state\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname : '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email:'',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message:''\r\n}\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Feedback = (state = {\r\n    errMess: null,\r\n    feedbacks : []\r\n}, action) => {\r\n    switch (action.type) {\r\n        \r\n        case ActionTypes.ADD_FEEDBACK:\r\n            var feedback = action.payload;\r\n            return {...state,feedbacks : state.feedbacks.concat(feedback)};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import Main from './components/MainComponent'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { ConfigureStore  } from './redux/configuerStore'\r\nconst store = ConfigureStore()\r\nconst App = () => {\r\n    \r\n\r\n    return (\r\n        <Provider store = {store} >\r\n            <BrowserRouter>\r\n                <div>\r\n                    <Main />\r\n                </div>\r\n            </BrowserRouter>\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { createStore, combineReducers , applyMiddleware  } from 'redux'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport  { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport  {createForms} from 'react-redux-form'\r\nimport { InitialFeedback } from './Forms'\r\nimport {Feedback} from './feedback'\r\nexport const ConfigureStore =() => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes : Dishes,\r\n            comments: Comments,\r\n            promotions : Promotions,\r\n            leaders: Leaders,\r\n            feedback : Feedback,\r\n            ...createForms({\r\n                feedback : InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n        )\r\n    \r\n    return store\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport  'font-awesome/css/font-awesome.min.css'\nimport 'bootstrap-social/bootstrap-social.css'\n \nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}